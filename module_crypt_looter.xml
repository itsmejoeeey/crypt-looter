<?xml version="1.0" encoding="UTF-8"?>
<project name="module_crypt_looter" default="compile.module.crypt_looter">
  <dirname property="module.crypt_looter.basedir" file="${ant.file.module_crypt_looter}"/>
  
  
  <property name="compiler.args.crypt_looter" value="-encoding UTF-8 -source 11 -target 11 ${compiler.args}"/>
  
  <property name="crypt_looter.output.dir" value="${module.crypt_looter.basedir}/out/production/crypt_looter"/>
  <property name="crypt_looter.testoutput.dir" value="${module.crypt_looter.basedir}/out/test/crypt_looter"/>
  
  <path id="crypt_looter.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="crypt_looter.module.production.classpath"/>
  
  <path id="crypt_looter.runtime.production.module.classpath">
    <pathelement location="${crypt_looter.output.dir}"/>
  </path>
  
  <path id="crypt_looter.module.classpath">
    <pathelement location="${crypt_looter.output.dir}"/>
  </path>
  
  <path id="crypt_looter.runtime.module.classpath">
    <pathelement location="${crypt_looter.testoutput.dir}"/>
    <pathelement location="${crypt_looter.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.crypt_looter">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.crypt_looter">
    <patternset refid="excluded.from.module.crypt_looter"/>
  </patternset>
  
  <path id="crypt_looter.module.sourcepath">
    <dirset dir="${module.crypt_looter.basedir}">
      <include name="src"/>
      <include name="src/res"/>
      <include name="src/res/icons"/>
      <include name="src/res/sounds"/>
      <include name="src/res/textures"/>
      <include name="src/res/ui"/>
      <include name="src/res/maps"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.crypt_looter" depends="compile.module.crypt_looter.production,compile.module.crypt_looter.tests" description="Compile module crypt_looter"/>
  
  <target name="compile.module.crypt_looter.production" description="Compile module crypt_looter; production classes">
    <mkdir dir="${crypt_looter.output.dir}"/>
    <javac destdir="${crypt_looter.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.crypt_looter}"/>
      <bootclasspath refid="crypt_looter.module.bootclasspath"/>
      <classpath refid="crypt_looter.module.production.classpath"/>
      <src refid="crypt_looter.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.crypt_looter"/>
    </javac>
    
    <copy todir="${crypt_looter.output.dir}">
      <fileset dir="${module.crypt_looter.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.crypt_looter.basedir}/src/res">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.crypt_looter.basedir}/src/res/icons">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.crypt_looter.basedir}/src/res/sounds">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.crypt_looter.basedir}/src/res/textures">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.crypt_looter.basedir}/src/res/ui">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.crypt_looter.basedir}/src/res/maps">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.crypt_looter.tests" depends="compile.module.crypt_looter.production" description="compile module crypt_looter; test classes" unless="skip.tests"/>
  
  <target name="clean.module.crypt_looter" description="cleanup module">
    <delete dir="${crypt_looter.output.dir}"/>
    <delete dir="${crypt_looter.testoutput.dir}"/>
  </target>
</project>